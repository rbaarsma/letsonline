<?php

/**
 * Coupon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Lets Online
 * @subpackage model
 * @author     Rein Baarsma <solidwebcode@googlemail.com>
 */
class Coupon extends BaseCoupon
{
  /**
   * @param myUser $user
   * @return User
   */
  public function getOtherUser(User $user)
  {
    return $this->getSenderId() != $user->getId() ? $this->getSender() : $this->getReceiver();
  }

  /**
   *
   * @return myUser $user
   * @return int $amount
   */
  public function getTransactionAmount(User $user)
  {
    $amount = $this->getAmount();
    $amount = $this->getSenderId() == $user->getId() ? -$amount : $amount;
    return $this->getFormattedAmount($amount);
  }

  public function getFormattedAmount($amount=null)
  {
    if ($amount === null)
      $amount = $this->getAmount();
    $amount = round($amount, 2);
    return $amount;
  }

  public function getFormattedDate($with_time=false)
  {
    return Utils::getInstance()->formatDate($this->_get('date'), $with_time);
  }

  /**
   *
   * @param myUser $user
   * @return boolean $is_received_reminder
   */
  public function isReceivedReminder(User $user)
  {
    return $this->getConfirmed() === false && $user->getId() == $this->getSenderId();
  }

  /**
   *
   * @param myUser $user
   * @return boolean $is_sent_reminder
   */
  public function isSentReminder(User $user)
  {
    return $this->getConfirmed() === false  && $user->getId() == $this->getReceiverId();
  }

  /**
   *
   * @param myUser $user
   * @return boolean
   */
  public function isPositive(User $user)
  {
    return $this->getTransactionAmount($user) > 0;
  }

  /**
   *
   * @param myUser $user
   * @return boolean $is_from_this_user
   */
  public function isFrom(User $user)
  {
    return $this->getReceiverId() == $user->getId() || $this->getSenderId() == $user->getId();
  }

  /**
   * updates user totals from both sender and receiver when coupon is confirmed
   * @param Doctrine_Connection $conn
   * @return Doctrine_Connection
   */
  public function save(Doctrine_Connection $conn = null)
  {
    parent::save($conn);

    // whenever a coupon changes to 'confirm' (either directly on creation
    // or later through confirming a reminder) we'll also update both users'
    if ($this->_get('confirmed') === true)
    {
      $this->getSender()->updateTotals($this);
      $this->getReceiver()->updateTotals($this);
    }
  }
}